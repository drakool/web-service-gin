name: Docker-GCP-CI-CD
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    #name: Build and Deploy REST API Container to Google App Engine
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')  # <-- Notice that I'm filtering here to only run when a tagged commit is pushed

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build
        run: go build -v ./...


      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        env:
          PROJECT_ID: vault-on-cloud-run-419505 # TODO: update Google Cloud project id
          GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
          REGION: us-central1 # TODO: update Cloud Run service region
          APP: web-service-gin

        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Get tag
        id: get-tag
        #run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
        #run: echo "{name}={value}" >> $GITHUB_STATE
        run: echo "{name}={value}" >> $GITHUB_OUTPUT


      # - id: docker-push-tagged
      #   name: Tag Docker image and push to Google Artifact Registry
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: |
      #        us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/ web-service-gin/web-service-gin:${{ steps.get-tag.outputs.GITHUB_OUTPUT }}
      #        us-central1-docker.pkg.dev/'${{ env.PROJECT_ID }}'/web-service-gin/web-service-gin:latest
      # - id: populate-configs
      #   uses: 73h/gae-app-yaml-replace-env-variables@v0.3
      #   env:
      #     SECRET_AUTH_URL: ${{ secrets.SECRET_AUTH_URL }}
      #     SECRET_DB_USER: ${{ secrets.SECRET_DB_USER }}
      #     SECRET_DB_PASS: ${{ secrets.SECRET_DB_PASS }}
      #     SECRET_DB_PORT: ${{ secrets.SECRET_DB_PORT }}
      #     SECRET_DB_NAME: ${{ secrets.SECRET_DB_NAME }}
      #     SECRET_DB_HOST: ${{ secrets.SECRET_DB_HOST }}
      #     SECRET_INSTANCE_UNIX_SOCKET: ${{ secrets.SECRET_INSTANCE_UNIX_SOCKET }}
      #     SECRET_CLOUD_SQL_INSTANCE: ${{ secrets.SECRET_CLOUD_SQL_INSTANCE }}
      #     SECRET_SERVICE_API_KEY: ${{ secrets.SECRET_SERVICE_API_KEY }}
      #   with:
      #     app_yaml_path: ".github/configs/app.yaml"
      - uses: 'google-github-actions/create-cloud-deploy-release@v1'
        with:
          name: 'web-service-gin-v1-2-3'
          description: 'Add new functionality to web-service-gin'
          delivery_pipeline: 'web-app-private-targets'
          region: 'us-central1'
          images: 'web-service-gin=us-central1-docker.pkg.dev/vault-on-cloud-run-419505/web-service-gin/web-service-gin:v1.2.3'
          source: '.'
          skaffold_file: '../../skaffold.yaml'
      # - id: deploy
      #   name: Deploy Docker image to App Engine
      #   uses: google-github-actions/deploy-appengine@v1
      #   with:
      #     deliverables: '.github/configs/app.yaml'